<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="19" errors="0" failures="0" not-run="0" inconclusive="15" ignored="0" skipped="0" invalid="0" date="2019-11-05" time="18:59:29">
  <environment clr-version="4.0.30319.42000" user-domain="APPVYR-WIN" cwd="C:\projects\vmware" platform="Microsoft Windows Server 2012 R2 Datacenter|C:\windows|\Device\Harddisk0\Partition5" machine-name="APPVYR-WIN" nunit-version="2.5.8.0" os-version="6.3.9600" user="appveyor" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Inconclusive" success="True" time="3.493" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\projects\vmware\Tests\Get-VMWareOrphanedFile.tests.ps1" executed="True" result="Inconclusive" success="True" time="1.7457" asserts="0" description="C:\projects\vmware\Tests\Get-VMWareOrphanedFile.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="vmware : Get-VMWareOrphanedFile" executed="True" result="Inconclusive" success="True" time="1.5153" asserts="0" description="vmware : Get-VMWareOrphanedFile">
            <results>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Inconclusive" success="True" time="0.3662" asserts="0" description="Execution">
                <results>
                  <test-case description="Cannot mock PowerCLI Cmdlets ( https://github.com/pester/Pester/issues/803 )" name="vmware : Get-VMWareOrphanedFile.Execution.Cannot mock PowerCLI Cmdlets ( https://github.com/pester/Pester/issues/803 )" time="0" asserts="0" success="True" result="Inconclusive" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\vmware\Tests\vmware.tests.ps1" executed="True" result="Inconclusive" success="True" time="1.7474" asserts="0" description="C:\projects\vmware\Tests\vmware.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="vmware : Module Tests" executed="True" result="Success" success="True" time="0.2898" asserts="0" description="vmware : Module Tests">
            <results>
              <test-case description="should have a test for each function" name="vmware : Module Tests.should have a test for each function" time="0.1558" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="vmware : Get-VMWareAlarm" executed="True" result="Inconclusive" success="True" time="0.1143" asserts="0" description="vmware : Get-VMWareAlarm">
            <results>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Success" success="True" time="0.0224" asserts="0" description="Execution">
                <results />
              </test-suite>
              <test-suite type="TestFixture" name="Output" executed="True" result="Inconclusive" success="True" time="0.0221" asserts="0" description="Output">
                <results>
                  <test-case description="Should Accept pipeline input and return an Alarm object" name="vmware : Get-VMWareAlarm.Output.Should Accept pipeline input and return an Alarm object" time="0" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="Should accept positional input and return an Alarm object" name="vmware : Get-VMWareAlarm.Output.Should accept positional input and return an Alarm object" time="0" asserts="0" success="True" result="Inconclusive" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="vmware : Copy-VMWareAlarm" executed="True" result="Success" success="True" time="0.1575" asserts="0" description="vmware : Copy-VMWareAlarm">
            <results>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Success" success="True" time="0.1109" asserts="0" description="Execution">
                <results>
                  <test-case description="Cannot mock PowerCLI Cmdlets ( https://github.com/pester/Pester/issues/803 )" name="vmware : Copy-VMWareAlarm.Execution.Cannot mock PowerCLI Cmdlets ( https://github.com/pester/Pester/issues/803 )" time="0.0915" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="vmware : Get-VMWareEvent" executed="True" result="Inconclusive" success="True" time="0.1179" asserts="0" description="vmware : Get-VMWareEvent">
            <results>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Inconclusive" success="True" time="0.0267" asserts="0" description="Execution">
                <results>
                  <test-case description="Should throw an error if there is one" name="vmware : Get-VMWareEvent.Execution.Should throw an error if there is one" time="0" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="Should not throw an error if there is not one" name="vmware : Get-VMWareEvent.Execution.Should not throw an error if there is not one" time="0" asserts="0" success="True" result="Inconclusive" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Output" executed="True" result="Inconclusive" success="True" time="0.0175" asserts="0" description="Output">
                <results>
                  <test-case description="Cannot mock PowerCLI Cmdlets ( https://github.com/pester/Pester/issues/803 )" name="vmware : Get-VMWareEvent.Output.Cannot mock PowerCLI Cmdlets ( https://github.com/pester/Pester/issues/803 )" time="0" asserts="0" success="True" result="Inconclusive" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="vmware : Get-VMWareVMReconfiguration" executed="True" result="Success" success="True" time="0.0497" asserts="0" description="vmware : Get-VMWareVMReconfiguration">
            <results>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Success" success="True" time="0.0267" asserts="0" description="Execution">
                <results>
                  <test-case description="Cannot mock PowerCLI Cmdlets ( https://github.com/pester/Pester/issues/803 )" name="vmware : Get-VMWareVMReconfiguration.Execution.Cannot mock PowerCLI Cmdlets ( https://github.com/pester/Pester/issues/803 )" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="vmware : Get-VMWareMotionHistory" executed="True" result="Inconclusive" success="True" time="0.0955" asserts="0" description="vmware : Get-VMWareMotionHistory">
            <results>
              <test-suite type="TestFixture" name="Output" executed="True" result="Inconclusive" success="True" time="0.0173" asserts="0" description="Output">
                <results>
                  <test-case description="Should return VMWare Event object" name="vmware : Get-VMWareMotionHistory.Output.Should return VMWare Event object" time="0" asserts="0" success="True" result="Inconclusive" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="vmware : Get-VMWareDataStoreSIOC" executed="True" result="Inconclusive" success="True" time="0.2697" asserts="0" description="vmware : Get-VMWareDataStoreSIOC">
            <results>
              <test-suite type="TestFixture" name="Input" executed="True" result="Inconclusive" success="True" time="0.2181" asserts="0" description="Input">
                <results>
                  <test-case description="Should accept pipeline input" name="vmware : Get-VMWareDataStoreSIOC.Input.Should accept pipeline input" time="0" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="Should accept an array as input" name="vmware : Get-VMWareDataStoreSIOC.Input.Should accept an array as input" time="0" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="Should not accept input from objects other than string or vmfsDataStore" name="vmware : Get-VMWareDataStoreSIOC.Input.Should not accept input from objects other than string or vmfsDataStore" time="0.08" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Returns an object with SIOC Information" name="vmware : Get-VMWareDataStoreSIOC.Returns an object with SIOC Information" time="0" asserts="0" success="True" result="Inconclusive" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="vmware : Set-VMWareDataStoreSIOC" executed="True" result="Success" success="True" time="0.0193" asserts="0" description="vmware : Set-VMWareDataStoreSIOC">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="vmware : Get-VMWareHostLog" executed="True" result="Inconclusive" success="True" time="0.0467" asserts="0" description="vmware : Get-VMWareHostLog">
            <results>
              <test-suite type="TestFixture" name="Output" executed="True" result="Inconclusive" success="True" time="0.0206" asserts="0" description="Output">
                <results>
                  <test-case description="Should return a list of files" name="vmware : Get-VMWareHostLog.Output.Should return a list of files" time="0" asserts="0" success="True" result="Inconclusive" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="vmware : Get-VMWareHostLogList" executed="True" result="Inconclusive" success="True" time="0.0416" asserts="0" description="vmware : Get-VMWareHostLogList">
            <results>
              <test-suite type="TestFixture" name="Output" executed="True" result="Inconclusive" success="True" time="0.0205" asserts="0" description="Output">
                <results>
                  <test-case description="Should return a text doc" name="vmware : Get-VMWareHostLogList.Output.Should return a text doc" time="0" asserts="0" success="True" result="Inconclusive" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="vmware : Get-VMWareVMLog" executed="True" result="Inconclusive" success="True" time="0.1461" asserts="0" description="vmware : Get-VMWareVMLog">
            <results>
              <test-suite type="TestFixture" name="OUtput" executed="True" result="Inconclusive" success="True" time="0.0276" asserts="0" description="OUtput">
                <results>
                  <test-case description="Should create log files when passed a VM object" name="vmware : Get-VMWareVMLog.OUtput.Should create log files when passed a VM object" time="0" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="SHould create log file when passed a VM Name (String)" name="vmware : Get-VMWareVMLog.OUtput.SHould create log file when passed a VM Name (String)" time="0" asserts="0" success="True" result="Inconclusive" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="vmware : Test-VMWareHostConnection" executed="True" result="Success" success="True" time="0.0592" asserts="0" description="vmware : Test-VMWareHostConnection">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="vmware : Get-VMWareResourceShare" executed="True" result="Success" success="True" time="0.0247" asserts="0" description="vmware : Get-VMWareResourceShare">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="vmware : CalculateVMWareResourceSharePercentageHelper" executed="True" result="Success" success="True" time="0.0197" asserts="0" description="vmware : CalculateVMWareResourceSharePercentageHelper">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="vmware : Find-VMWareResourceSharePercentage" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="vmware : Find-VMWareResourceSharePercentage">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="vmware : Get-VMWareRamdisk" executed="True" result="Inconclusive" success="True" time="0.1258" asserts="0" description="vmware : Get-VMWareRamdisk">
            <results>
              <test-suite type="TestFixture" name="Output" executed="True" result="Inconclusive" success="True" time="0.0784" asserts="0" description="Output">
                <results>
                  <test-case description=" Return a Ramdisk object" name="vmware : Get-VMWareRamdisk.Output. Return a Ramdisk object" time="0" asserts="0" success="True" result="Inconclusive" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>